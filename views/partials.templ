package views

import "binp/storage"

templ Button(text string, attrs templ.Attributes) {
	<button
		class="
			text-white
			bg-blue-700
			hover:bg-blue-800
			focus:ring-4
			focus:ring-blue-300
			font-medium
			rounded-lg
			text-xs
			px-4
			py-2.5
			dark:bg-blue-600
			dark:hover:bg-blue-700
			focus:outline-none
			dark:focus:ring-blue-800
			disabled:cursor-not-allowed
			disabled:bg-opacity-20
			disabled:hover:bg-opacity-20
		"
		{ attrs... }
	>
		{ text }
	</button>
}

templ Select(options []storage.SelectOption, attrs templ.Attributes) {
	<select
		class="
			block
			text-gray-900
			text-xs
			rounded-lg
			bg-gray-50
			border
			border-gray-300
			border-s-gray-100
			border-s-2
			focus:ring-blue-500
			focus:border-blue-500
			dark:border-s-gray-700
			dark:bg-gray-700
			dark:border-gray-600
			dark:placeholder-gray-400
			dark:text-white
			dark:focus:ring-blue-500
			dark:focus:border-blue-500
		"
		{ attrs... }
	>
		{ children... }
		for _, option := range options {
			<option value={ option.Value }>{ option.Label }</option>
		}
	</select>
}

templ SnippetDetails(snippet *storage.Snippet, highlightedCode string) {
	@Navbar() {
		@Button(
			"Copy URL",
			templ.Attributes{
				"_":    "on click writeText(window.location.origin + '/' + #snippet-id.innerText) into the navigator's clipboard",
				"type": "button",
			},
		)
		@Button(
			"Copy Text",
			templ.Attributes{
				"_":    "on click writeText(#snippet-raw-text.innerText) into the navigator's clipboard",
				"type": "button",
			},
		)
	}
	@Container() {
		{ children... }
		<div hidden class="sr-only absolute" id="snippet-raw-text">{ snippet.Text }</div>
		<div hidden class="sr-only absolute" id="snippet-id">{ snippet.ID }</div>
		<div class="p-4">
			@templ.Raw(highlightedCode)
		</div>
	}
}
