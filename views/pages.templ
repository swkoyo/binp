package views

import "binp/storage"

templ Index() {
	@Base() {
		@Navbar(templ.Attributes{}) {
			<div class="flex items-center space-x-2">
				@Select(
					storage.ValidLanguages,
					templ.Attributes{"name": "language"},
				)
				@Select(
					storage.ValidExpirations,
					templ.Attributes{"name": "expiry"},
				)
				<input type="checkbox" name="burn_after_read" value="true" class="w-4 h-4 text-red-600 bg-gray-100 border-gray-300 rounded focus:ring-red-500 dark:focus:ring-red-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600"/>
				<label for="burn_after_read" class="ms-2 text-sm font-medium text-gray-900 dark:text-gray-300">Burn after read</label>
			</div>
			@Button(
				"Submit",
				templ.Attributes{
					"disabled":        true,
					"type":            "submit",
					"id":              "snippet-submit-btn",
					"hx-post":         "/snippet",
					"hx-include":      "[name='text'], [name='language'], [name='expiry'], [name='burn_after_read']",
					"hx-target":       "#content",
					"hx-target-error": "#alert",
					"hx-swap":         "outerHTML",
				},
			)
		}
		@Container() {
			<textarea
				autofocus
				name="text"
				placeholder="Hello world"
				class="w-full h-full bg-transparent text-white resize-none border-none outline-none px-4 py-6 focus:ring-0"
				_="
					on keydown[key=='Tab']
					halt the event default
					get my selectionStart
					set start to it
					get my selectionEnd
					set end to it
					get my value
					set my value to it.substring(0, start) + '\t' + it.substring(end)
					set my selectionStart to start + 1
					set my selectionEnd to start + 1
					on input
					if event.target.value.trim().length === 0
						add @disabled to #snippet-submit-btn
					else
						remove @disabled from #snippet-submit-btn
				"
			></textarea>
		}
	}
}

templ SnippetPage(snippet *storage.Snippet) {
	@Base() {
		@Navbar(templ.Attributes{}) {
			@Button(
				"Copy URL",
				templ.Attributes{
					"_":    "on click writeText(window.location.origin + '/' + #snippet-id.innerText) into the navigator's clipboard",
					"type": "button",
				},
			)
			@Button(
				"Copy Text",
				templ.Attributes{
					"_":    "on click writeText(#snippet-raw-text.innerText) into the navigator's clipboard",
					"type": "button",
				},
			)
		}
		@Container() {
			<div hidden class="sr-only absolute" id="snippet-raw-text">{ snippet.Text }</div>
			<div hidden class="sr-only absolute" id="snippet-id">{ snippet.ID }</div>
			<div class="p-4">
				@templ.Raw(snippet.HighlightedCode)
			</div>
		}
	}
}

templ PostSnippetResponse(snippet *storage.Snippet) {
	@SuccessAlert("Snippet created successfully!")
	@Navbar(templ.Attributes{"hx-swap-oob": "true"}) {
		@Button(
			"Copy URL",
			templ.Attributes{
				"_":    "on click writeText(window.location.origin + '/' + #snippet-id.innerText) into the navigator's clipboard",
				"type": "button",
			},
		)
		@Button(
			"Copy Text",
			templ.Attributes{
				"_":    "on click writeText(#snippet-raw-text.innerText) into the navigator's clipboard",
				"type": "button",
			},
		)
	}
	<div id="content" class="flex-grow">
		<div hidden class="sr-only absolute" id="snippet-raw-text">{ snippet.Text }</div>
		<div hidden class="sr-only absolute" id="snippet-id">{ snippet.ID }</div>
		<div class="p-4">
			@templ.Raw(snippet.HighlightedCode)
		</div>
	</div>
	@SuccessAlert("Snippet created successfully!")
}

templ NotFoundPage() {
	@Base() {
		@Navbar(templ.Attributes{})
		@Container() {
			<div class="flex flex-col text-center mx-auto pt-4">
				<h1 class="text-2xl">404</h1>
				<p>Bottom text</p>
			</div>
		}
	}
}

templ ErrorPage() {
	@Base() {
		@Navbar(templ.Attributes{})
		@Container() {
			<div class="flex flex-col text-center mx-auto pt-4">
				<h1 class="text-2xl">500</h1>
				<p>Something went wrong</p>
			</div>
		}
	}
}
